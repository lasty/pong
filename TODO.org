

## Todo List

- Collision detection
  - [TODO] Fix bugs with collision/reflection handling
  - line line collision (needed?)
  - line rect collision (needed?)
  - force when collided
  - change collides_any etc to return a struct with the collision points or something
- resize redraws border lines
- Refactor and clean up code again  (move things to maths, collision routines out of game class)

- Gameish
  - [DONE] Arrange blocks in grid formation for test level
  - Change player to paddle rect
  - Paddle follow mouse cursor X position
  - Fire straight up from paddle
  - Eventually deflect on paddle

  - Remove ball from bottom of screen
    - Rework simple collision checks for out of bounds balls


## Todo Low Priority
- [TODO] Watch more of those videos
- [TODO] Investigate atom clang-format


## Done!


  - [DONE] Bounding Box class
  - [DONE] try making blocks out of lines, for circle line collision
  - [DONE] see if circle/line collision can be two sided
  - [DONE] Simple circle detection
  - [DONE] Rect point collisions
  - [DONE] rect rect collisions
  - [DONE] rect circle collisions
  - [DONE] circle line collision
  - [DONE] Somehow rework boundaries to new collision detection routines


## Other Ideas

- Project limits, use no textures, only coloured vertexes?
